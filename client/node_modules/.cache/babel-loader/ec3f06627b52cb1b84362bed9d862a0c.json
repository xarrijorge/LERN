{"ast":null,"code":"var _jsxFileName = \"/home/odin/Dev/lern/src/components/Reports.jsx\";\nimport React, { Fragment } from 'react';\n\nconst Report = ({\n  message\n}) => {\n  return React.createElement(\"button\", {\n    className: \"report\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, message.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, message.county, \", \", message.location), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, new Date(message.date).toDateString()), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Category:\", ' ', message.category.map(desc => React.createElement(\"span\", {\n    className: \"category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, desc, \" | \"))));\n};\n\nconst Reports = ({\n  messages\n}) => {\n  const reports = messages.map(report => React.createElement(Report, {\n    key: report.id,\n    message: report,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reportBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, reports), React.createElement(\"div\", {\n    className: \"displayBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nexport default Reports;","map":{"version":3,"sources":["/home/odin/Dev/lern/src/components/Reports.jsx"],"names":["React","Fragment","Report","message","title","county","location","Date","date","toDateString","category","map","desc","Reports","messages","reports","report","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC9B,SACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAO,CAACC,KAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,MADX,QACqBF,OAAO,CAACG,QAD7B,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,IAAIC,IAAJ,CAASJ,OAAO,CAACK,IAAjB,EAAuBC,YAAvB,EAAJ,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY,GADZ,EAEGN,OAAO,CAACO,QAAR,CAAiBC,GAAjB,CAAqBC,IAAI,IACxB;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,IAA5B,QADD,CAFH,CANF,CADF;AAeD,CAhBD;;AAkBA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChC,QAAMC,OAAO,GAAGD,QAAQ,CAACH,GAAT,CAAaK,MAAM,IACjC,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,IAAA,OAAO,EAAED,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAhB;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BD,OAA5B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAXD;;AAYA,eAAeF,OAAf","sourcesContent":["import React, { Fragment } from 'react'\n\nconst Report = ({ message }) => {\n  return (\n    <button className=\"report\">\n      <p>{message.title}</p>\n      <p>\n        {message.county}, {message.location}\n      </p>\n      <p>{new Date(message.date).toDateString()}</p>\n      <p>\n        Category:{' '}\n        {message.category.map(desc => (\n          <span className=\"category\">{desc} | </span>\n        ))}\n      </p>\n    </button>\n  )\n}\n\nconst Reports = ({ messages }) => {\n  const reports = messages.map(report => (\n    <Report key={report.id} message={report} />\n  ))\n\n  return (\n    <Fragment>\n      <div className=\"reportBox\">{reports}</div>\n      <div className=\"displayBox\"></div>\n    </Fragment>\n  )\n}\nexport default Reports\n"]},"metadata":{},"sourceType":"module"}