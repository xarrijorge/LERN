{"ast":null,"code":"export default function dequal(foo, bar) {\n  var ctor, len;\n  if (foo === bar) return true;\n\n  if (foo && bar && (ctor = foo.constructor) === bar.constructor) {\n    if (ctor === Date) return foo.getTime() === bar.getTime();\n    if (ctor === RegExp) return foo.toString() === bar.toString();\n\n    if (ctor === Array && (len = foo.length) === bar.length) {\n      while (len-- && dequal(foo[len], bar[len]));\n\n      return len === -1;\n    }\n\n    if (ctor === Object) {\n      if (Object.keys(foo).length !== Object.keys(bar).length) return false;\n\n      for (len in foo) if (!(len in bar) || !dequal(foo[len], bar[len])) return false;\n\n      return true;\n    }\n  }\n\n  return foo !== foo && bar !== bar;\n}","map":{"version":3,"sources":["/home/odin/Dev/lern/node_modules/dequal/dist/dequal.mjs"],"names":["dequal","foo","bar","ctor","len","constructor","Date","getTime","RegExp","toString","Array","length","Object","keys"],"mappings":"AAAA,eAAe,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxC,MAAIC,IAAJ,EAAUC,GAAV;AACA,MAAIH,GAAG,KAAKC,GAAZ,EAAiB,OAAO,IAAP;;AACjB,MAAID,GAAG,IAAIC,GAAP,IAAc,CAACC,IAAI,GAACF,GAAG,CAACI,WAAV,MAA2BH,GAAG,CAACG,WAAjD,EAA8D;AAC7D,QAAIF,IAAI,KAAKG,IAAb,EAAmB,OAAOL,GAAG,CAACM,OAAJ,OAAkBL,GAAG,CAACK,OAAJ,EAAzB;AACnB,QAAIJ,IAAI,KAAKK,MAAb,EAAqB,OAAOP,GAAG,CAACQ,QAAJ,OAAmBP,GAAG,CAACO,QAAJ,EAA1B;;AACrB,QAAIN,IAAI,KAAKO,KAAT,IAAkB,CAACN,GAAG,GAACH,GAAG,CAACU,MAAT,MAAqBT,GAAG,CAACS,MAA/C,EAAuD;AACtD,aAAOP,GAAG,MAAMJ,MAAM,CAACC,GAAG,CAACG,GAAD,CAAJ,EAAWF,GAAG,CAACE,GAAD,CAAd,CAAtB,CAA2C;;AAC3C,aAAOA,GAAG,KAAK,CAAC,CAAhB;AACA;;AACD,QAAID,IAAI,KAAKS,MAAb,EAAqB;AACpB,UAAIA,MAAM,CAACC,IAAP,CAAYZ,GAAZ,EAAiBU,MAAjB,KAA4BC,MAAM,CAACC,IAAP,CAAYX,GAAZ,EAAiBS,MAAjD,EAAyD,OAAO,KAAP;;AACzD,WAAKP,GAAL,IAAYH,GAAZ,EAAiB,IAAI,EAAEG,GAAG,IAAIF,GAAT,KAAiB,CAACF,MAAM,CAACC,GAAG,CAACG,GAAD,CAAJ,EAAWF,GAAG,CAACE,GAAD,CAAd,CAA5B,EAAkD,OAAO,KAAP;;AACnE,aAAO,IAAP;AACA;AACD;;AACD,SAAOH,GAAG,KAAKA,GAAR,IAAeC,GAAG,KAAKA,GAA9B;AACA","sourcesContent":["export default function dequal(foo, bar) {\n\tvar ctor, len;\n\tif (foo === bar) return true;\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\t\tif (ctor === Array && (len=foo.length) === bar.length) {\n\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\treturn len === -1;\n\t\t}\n\t\tif (ctor === Object) {\n\t\t\tif (Object.keys(foo).length !== Object.keys(bar).length) return false;\n\t\t\tfor (len in foo) if (!(len in bar) || !dequal(foo[len], bar[len])) return false;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn foo !== foo && bar !== bar;\n}\n"]},"metadata":{},"sourceType":"module"}