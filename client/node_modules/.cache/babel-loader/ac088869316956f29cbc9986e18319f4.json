{"ast":null,"code":"var _jsxFileName = \"/home/odin/Dev/lern/src/components/map.js\";\nimport React, { useState, useRef, Fragment } from 'react'; // import useSwr from 'swr'\n\nimport GoogleMapReact from 'google-map-react'; // import useSuperCluster from 'use-supercluster'\n\nexport default function Map() {\n  //   map setup\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState(null); //load and format data\n  //get clusters\n  //render map\n\n  return (// <Fragment style={{ height: '100vh', width: '100%' }}>\n    React.createElement(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_LERN_MAP_API_KEY\n      },\n      defaultCenter: {\n        lat: 6.4802,\n        lng: -9.6728\n      },\n      defaultZoom: 8.2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }) // </Fragment>\n\n  );\n}","map":{"version":3,"sources":["/home/odin/Dev/lern/src/components/map.js"],"names":["React","useState","useRef","Fragment","GoogleMapReact","Map","mapRef","zoom","setZoom","bounds","setBounds","key","process","env","REACT_APP_LERN_MAP_API_KEY","lat","lng"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAkD,OAAlD,C,CACA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B;AACA,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC,CAJ4B,CAK5B;AACA;AACA;;AACA,SACE;AACA,wBAAC,cAAD;AACE,MAAA,gBAAgB,EAAE;AAAEU,QAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAnB,OADpB;AAEE,MAAA,aAAa,EAAE;AAAEC,QAAAA,GAAG,EAAE,MAAP;AAAeC,QAAAA,GAAG,EAAE,CAAC;AAArB,OAFjB;AAGE,MAAA,WAAW,EAAE,GAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CASE;;AATF;AAWD","sourcesContent":["import React, { useState, useRef, Fragment } from 'react'\n// import useSwr from 'swr'\nimport GoogleMapReact from 'google-map-react'\n// import useSuperCluster from 'use-supercluster'\n\nexport default function Map() {\n  //   map setup\n  const mapRef = useRef()\n  const [zoom, setZoom] = useState(10)\n  const [bounds, setBounds] = useState(null)\n  //load and format data\n  //get clusters\n  //render map\n  return (\n    // <Fragment style={{ height: '100vh', width: '100%' }}>\n    <GoogleMapReact\n      bootstrapURLKeys={{ key: process.env.REACT_APP_LERN_MAP_API_KEY }}\n      defaultCenter={{ lat: 6.4802, lng: -9.6728 }}\n      defaultZoom={8.2}\n    >\n      {/* Markers */}\n    </GoogleMapReact>\n    // </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}