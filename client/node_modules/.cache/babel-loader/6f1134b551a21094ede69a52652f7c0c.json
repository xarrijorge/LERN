{"ast":null,"code":"var _jsxFileName = \"/home/odin/Dev/lern/src/components/map.js\";\nimport React, { useState, useRef } from 'react';\nimport useSwr from 'swr';\nimport GoogleMapReact from 'google-map-react';\nimport useSuperCluster from 'use-supercluster';\nimport Axios from 'axios';\n\nconst fetcher = url => Axios.get(url).then(response => response.data);\n\nconst Marker = ({\n  children\n}) => children;\n\nexport default function Map() {\n  //   map setup\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState(null); //load and format data\n\n  const URL = 'http://localhost:3001/reports';\n  const url = 'https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10';\n  const {\n    data\n  } = useSwr(URL, fetcher);\n  const reports = data ? data.slice(0, 200) : [];\n  const points = reports.map(report => ({\n    type: 'Feature',\n    properties: {\n      cluster: false,\n      reportId: report['#'],\n      category: report.CATEGORY\n    }\n  })); //get clusters\n\n  const {\n    clusters\n  } = useSuperCluster({\n    points,\n    bounds,\n    zoom,\n    options: {\n      radius: 75,\n      maxZoom: 20\n    }\n  }); //render map\n\n  return React.createElement(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: process.env.REACT_APP_LERN_MAP_API_KEY\n    },\n    defaultCenter: {\n      lat: 6.4802,\n      lng: -9.6728\n    } // defaultCenter={{ lat: 52.6376, lng: -1.135171 }}\n    ,\n    defaultZoom: 8.2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, reports.map(report => React.createElement(Marker, {\n    key: report['#'],\n    lat: report['LATITUDE'],\n    lng: report['LONGITUDE'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons mapMarker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"place\")))));\n}","map":{"version":3,"sources":["/home/odin/Dev/lern/src/components/map.js"],"names":["React","useState","useRef","useSwr","GoogleMapReact","useSuperCluster","Axios","fetcher","url","get","then","response","data","Marker","children","Map","mapRef","zoom","setZoom","bounds","setBounds","URL","reports","slice","points","map","report","type","properties","cluster","reportId","category","CATEGORY","clusters","options","radius","maxZoom","height","width","key","process","env","REACT_APP_LERN_MAP_API_KEY","lat","lng"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAGC,GAAG,IAAIF,KAAK,CAACG,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,IAAzC,CAAvB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkBA,QAAjC;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B;AACA,QAAMC,MAAM,GAAGd,MAAM,EAArB;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,IAAD,CAApC,CAJ4B,CAM5B;;AACA,QAAMoB,GAAG,GAAG,+BAAZ;AACA,QAAMb,GAAG,GACP,6FADF;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAWT,MAAM,CAACkB,GAAD,EAAMd,OAAN,CAAvB;AAEA,QAAMe,OAAO,GAAGV,IAAI,GAAGA,IAAI,CAACW,KAAL,CAAW,CAAX,EAAc,GAAd,CAAH,GAAwB,EAA5C;AACA,QAAMC,MAAM,GAAGF,OAAO,CAACG,GAAR,CAAYC,MAAM,KAAK;AACpCC,IAAAA,IAAI,EAAE,SAD8B;AAEpCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,KADC;AAEVC,MAAAA,QAAQ,EAAEJ,MAAM,CAAC,GAAD,CAFN;AAGVK,MAAAA,QAAQ,EAAEL,MAAM,CAACM;AAHP;AAFwB,GAAL,CAAlB,CAAf,CAb4B,CAqB5B;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAe5B,eAAe,CAAC;AACnCmB,IAAAA,MADmC;AAEnCL,IAAAA,MAFmC;AAGnCF,IAAAA,IAHmC;AAInCiB,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,OAAO,EAAE;AAAvB;AAJ0B,GAAD,CAApC,CAtB4B,CA4B5B;;AACA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AACE,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAnB,KADpB;AAEE,IAAA,aAAa,EAAE;AAAEC,MAAAA,GAAG,EAAE,MAAP;AAAeC,MAAAA,GAAG,EAAE,CAAC;AAArB,KAFjB,CAGE;AAHF;AAIE,IAAA,WAAW,EAAE,GAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGtB,OAAO,CAACG,GAAR,CAAYC,MAAM,IACjB,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,MAAM,CAAC,GAAD,CADb;AAEE,IAAA,GAAG,EAAEA,MAAM,CAAC,UAAD,CAFb;AAGE,IAAA,GAAG,EAAEA,MAAM,CAAC,WAAD,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADD,CAPH,CADF,CADF;AAqBD","sourcesContent":["import React, { useState, useRef } from 'react'\nimport useSwr from 'swr'\nimport GoogleMapReact from 'google-map-react'\nimport useSuperCluster from 'use-supercluster'\nimport Axios from 'axios'\n\nconst fetcher = url => Axios.get(url).then(response => response.data)\n\nconst Marker = ({ children }) => children\n\nexport default function Map() {\n  //   map setup\n  const mapRef = useRef()\n  const [zoom, setZoom] = useState(10)\n  const [bounds, setBounds] = useState(null)\n\n  //load and format data\n  const URL = 'http://localhost:3001/reports'\n  const url =\n    'https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10'\n  const { data } = useSwr(URL, fetcher)\n\n  const reports = data ? data.slice(0, 200) : []\n  const points = reports.map(report => ({\n    type: 'Feature',\n    properties: {\n      cluster: false,\n      reportId: report['#'],\n      category: report.CATEGORY\n    }\n  }))\n  //get clusters\n  const { clusters } = useSuperCluster({\n    points,\n    bounds,\n    zoom,\n    options: { radius: 75, maxZoom: 20 }\n  })\n  //render map\n  return (\n    <div style={{ height: '100vh', width: '100%' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.REACT_APP_LERN_MAP_API_KEY }}\n        defaultCenter={{ lat: 6.4802, lng: -9.6728 }}\n        // defaultCenter={{ lat: 52.6376, lng: -1.135171 }}\n        defaultZoom={8.2}\n      >\n        {/* Markers */}\n        {reports.map(report => (\n          <Marker\n            key={report['#']}\n            lat={report['LATITUDE']}\n            lng={report['LONGITUDE']}\n          >\n            <i className=\"material-icons mapMarker\">place</i>\n          </Marker>\n        ))}\n      </GoogleMapReact>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}